[{"content":"download sarasa ttf zip from GitHub\nselect mono and ui fonts\n1 fc-list 1 mkdir sarasa_mono_XX \u0026amp; sarasa_ui_XX copy fonts folders to ~/.fonts\nnotice: chmod -R 755, or system cannot scan new fonts\nflush font cache\n1 fc-cache -fv notice: if you want to change the font of the stupid qterminal in Kali, yo should go to ~/.config/qterminal.org/qterminal.ini to manually modify it, you might cannot see new fonts in terminal font list GUI\n","permalink":"http://staticmanual.github.io/posts/linux/add_font/","summary":"download sarasa ttf zip from GitHub\nselect mono and ui fonts\n1 fc-list 1 mkdir sarasa_mono_XX \u0026amp; sarasa_ui_XX copy fonts folders to ~/.fonts\nnotice: chmod -R 755, or system cannot scan new fonts\nflush font cache\n1 fc-cache -fv notice: if you want to change the font of the stupid qterminal in Kali, yo should go to ~/.config/qterminal.org/qterminal.ini to manually modify it, you might cannot see new fonts in terminal font list GUI","title":"Add Font"},{"content":"","permalink":"http://staticmanual.github.io/posts/rdp/rdp_setup/","summary":"","title":"RDP Setup"},{"content":" Find the server key fingerprint 1 ssh-keygen -l -f /etc/ssh/ssh_host_ecdsa_key.pub Generate key pair on the client 1 ssh-keygen -t ecdsa -C \u0026#34;Client_XX_Server_XX_20010101\u0026#34; -f ./ssh_XX2XX_ecdsa_key Setup /etc/ssh/sshd_config on the server 1 mkdir ~/.ssh 1 touch ~/.ssh/authorized_keys 1 chmod 600 ~/.ssh/authorized_keys Copy pub key to the server 1 scp -P \u0026lt;port\u0026gt; C:\\Users\\\u0026lt;USERNAME\u0026gt;\\.ssh\\ssh_XX2XX_ecdsa_key.pub \u0026lt;USERNAME\u0026gt;@\u0026lt;IP ADDR\u0026gt;:~/.ssh/ssh_XX2XX_ecdsa_key.pub 1 cat ~/.ssh/ssh_XX2XX_ecdsa_key.pub \u0026gt;\u0026gt; ~/.ssh/authorized_keys ","permalink":"http://staticmanual.github.io/posts/ssh/ssh_key_setup/","summary":" Find the server key fingerprint 1 ssh-keygen -l -f /etc/ssh/ssh_host_ecdsa_key.pub Generate key pair on the client 1 ssh-keygen -t ecdsa -C \u0026#34;Client_XX_Server_XX_20010101\u0026#34; -f ./ssh_XX2XX_ecdsa_key Setup /etc/ssh/sshd_config on the server 1 mkdir ~/.ssh 1 touch ~/.ssh/authorized_keys 1 chmod 600 ~/.ssh/authorized_keys Copy pub key to the server 1 scp -P \u0026lt;port\u0026gt; C:\\Users\\\u0026lt;USERNAME\u0026gt;\\.ssh\\ssh_XX2XX_ecdsa_key.pub \u0026lt;USERNAME\u0026gt;@\u0026lt;IP ADDR\u0026gt;:~/.ssh/ssh_XX2XX_ecdsa_key.pub 1 cat ~/.ssh/ssh_XX2XX_ecdsa_key.pub \u0026gt;\u0026gt; ~/.ssh/authorized_keys ","title":"SSH Key Setup"},{"content":"SSH to NAS 1 sudo -i Create a persistent TUN 1 echo -e \u0026#39;#!/bin/sh -e \\ninsmod /lib/modules/tun.ko\u0026#39; \u0026gt; /usr/local/etc/rc.d/tun.sh 1 chmod a+x /usr/local/etc/rc.d/tun.sh 1 /usr/local/etc/rc.d/tun.sh return ERROR or file exists can be ignored\n1 ls /dev/net/tun should return /dev/net/tun\nSet up container 1 mkdir /volume1/docker/zerotier-one 1 2 3 4 5 6 7 8 docker run -d \\ --name zerotier \\ --restart=always \\ --device=/dev/net/tun \\ --net=host \\ --cap-add=NET_ADMIN \\ --cap-add=SYS_ADMIN \\ -v /volume1/docker/zerotier-one:/var/lib/zerotier-one zerotier/zerotier-synology:latest 1 docker exec -it zerotier zerotier-cli status 1 docker exec -it zerotier zerotier-cli join \u0026lt;your network ID\u0026gt; authorize your NAS\n1 docker exec -it zerotier zerotier-cli listnetworks if you want to enter the docker\n1 docker exec -it zerotier sh Upgrade stop the current container\ndelete the current container\ndelete the current image\npull the latest image\nthen go back to Set up container\n","permalink":"http://staticmanual.github.io/posts/zerotier/zerotier_in_synology/","summary":"SSH to NAS 1 sudo -i Create a persistent TUN 1 echo -e \u0026#39;#!/bin/sh -e \\ninsmod /lib/modules/tun.ko\u0026#39; \u0026gt; /usr/local/etc/rc.d/tun.sh 1 chmod a+x /usr/local/etc/rc.d/tun.sh 1 /usr/local/etc/rc.d/tun.sh return ERROR or file exists can be ignored\n1 ls /dev/net/tun should return /dev/net/tun\nSet up container 1 mkdir /volume1/docker/zerotier-one 1 2 3 4 5 6 7 8 docker run -d \\ --name zerotier \\ --restart=always \\ --device=/dev/net/tun \\ --net=host \\ --cap-add=NET_ADMIN \\ --cap-add=SYS_ADMIN \\ -v /volume1/docker/zerotier-one:/var/lib/zerotier-one zerotier/zerotier-synology:latest 1 docker exec -it zerotier zerotier-cli status 1 docker exec -it zerotier zerotier-cli join \u0026lt;your network ID\u0026gt; authorize your NAS","title":"ZeroTier in Synology"},{"content":"Prerequisites:\nA server with pubilc IP addr\nZerotier installed\nJoined your network\nServer is authorized\nOn the Server 1 cd /var/lib/zerotier-one the following commands might require root\n1 zerotier-idtool initmoon identity.public \u0026gt; moon.json modify stableEndpoints in moon.json\n1 \u0026#34;stableEndpoints\u0026#34;: [\u0026#34;\u0026lt;your server IP\u0026gt;/9993\u0026#34;] 1 zerotier-idtool genmoon moon.json then a file similar to 000000xxxx.moon will be generated\n1 mkdir moons.d 1 mv 000000xxxx.moon moons.d 1 sudo systemctl restart zerotier-one run zerotier-cli peers to check whether you server is Moon now\nOn the Windows go to C:\\ProgramData\\ZeroTier\\One\ncreate dir moons.d\ncopy the 000000xxxx.moon generated in you server to above dir\nexit Zerotier client\ngo to service.msc to restart the zerotier service\nlaunch the Zerotier client\nrun cmd as Administrator\ncheck Moon\n1 zerotier-cli peers On the NAS copy 000000xxxx.moon to a dir in your NAS\n1 docker exec -it zerotier mkdir /var/lib/zerotier-one/moons.d 1 docker cp \u0026lt;moon file dir\u0026gt; \u0026lt;container ID\u0026gt;:/var/lib/zerotier-one/moons.d 1 docker exec -it zerotier zerotier-cli orbit \u0026lt;your Moon node Zerotier ID\u0026gt; \u0026lt;your Moon node Zerotier ID\u0026gt; check Moon\n1 docker exec -it zerotier zerotier-cli peers ","permalink":"http://staticmanual.github.io/posts/zerotier/zerotier_moon/","summary":"Prerequisites:\nA server with pubilc IP addr\nZerotier installed\nJoined your network\nServer is authorized\nOn the Server 1 cd /var/lib/zerotier-one the following commands might require root\n1 zerotier-idtool initmoon identity.public \u0026gt; moon.json modify stableEndpoints in moon.json\n1 \u0026#34;stableEndpoints\u0026#34;: [\u0026#34;\u0026lt;your server IP\u0026gt;/9993\u0026#34;] 1 zerotier-idtool genmoon moon.json then a file similar to 000000xxxx.moon will be generated\n1 mkdir moons.d 1 mv 000000xxxx.moon moons.d 1 sudo systemctl restart zerotier-one run zerotier-cli peers to check whether you server is Moon now","title":"ZeroTier Moon"}]