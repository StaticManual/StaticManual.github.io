<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Static Manual</title>
    <link>http://staticmanual.github.io/</link>
    <description>Recent content on Static Manual</description>
    <image>
      <url>http://staticmanual.github.io/papermod-cover.png</url>
      <link>http://staticmanual.github.io/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://staticmanual.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Add Font</title>
      <link>http://staticmanual.github.io/posts/linux/add_font/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://staticmanual.github.io/posts/linux/add_font/</guid>
      <description>download sarasa ttf zip from GitHub
select mono and ui fonts
1 fc-list 1 mkdir sarasa_mono_XX &amp;amp; sarasa_ui_XX copy fonts folders to ~/.fonts
notice: chmod -R 755, or system cannot scan new fonts
flush font cache
1 fc-cache -fv notice: if you want to change the font of the stupid qterminal in Kali, yo should go to ~/.config/qterminal.org/qterminal.ini to manually modify it, you might cannot see new fonts in terminal font list GUI</description>
    </item>
    
    <item>
      <title>RDP Setup</title>
      <link>http://staticmanual.github.io/posts/rdp/rdp_setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://staticmanual.github.io/posts/rdp/rdp_setup/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SSH Key Setup</title>
      <link>http://staticmanual.github.io/posts/ssh/ssh_key_setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://staticmanual.github.io/posts/ssh/ssh_key_setup/</guid>
      <description> Find the server key fingerprint 1 ssh-keygen -l -f /etc/ssh/ssh_host_ecdsa_key.pub Generate key pair on the client 1 ssh-keygen -t ecdsa -C &amp;#34;Client_XX_Server_XX_20010101&amp;#34; -f ./ssh_XX2XX_ecdsa_key Setup /etc/ssh/sshd_config on the server 1 mkdir ~/.ssh 1 touch ~/.ssh/authorized_keys 1 chmod 600 ~/.ssh/authorized_keys Copy pub key to the server 1 scp -P &amp;lt;port&amp;gt; C:\Users\&amp;lt;USERNAME&amp;gt;\.ssh\ssh_XX2XX_ecdsa_key.pub &amp;lt;USERNAME&amp;gt;@&amp;lt;IP ADDR&amp;gt;:~/.ssh/ssh_XX2XX_ecdsa_key.pub 1 cat ~/.ssh/ssh_XX2XX_ecdsa_key.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys </description>
    </item>
    
    <item>
      <title>ZeroTier in Synology</title>
      <link>http://staticmanual.github.io/posts/zerotier/zerotier_in_synology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://staticmanual.github.io/posts/zerotier/zerotier_in_synology/</guid>
      <description>SSH to NAS 1 sudo -i Create a persistent TUN 1 echo -e &amp;#39;#!/bin/sh -e \ninsmod /lib/modules/tun.ko&amp;#39; &amp;gt; /usr/local/etc/rc.d/tun.sh 1 chmod a+x /usr/local/etc/rc.d/tun.sh 1 /usr/local/etc/rc.d/tun.sh return ERROR or file exists can be ignored
1 ls /dev/net/tun should return /dev/net/tun
Set up container 1 mkdir /volume1/docker/zerotier-one 1 2 3 4 5 6 7 8 docker run -d \ --name zerotier \ --restart=always \ --device=/dev/net/tun \ --net=host \ --cap-add=NET_ADMIN \ --cap-add=SYS_ADMIN \ -v /volume1/docker/zerotier-one:/var/lib/zerotier-one zerotier/zerotier-synology:latest 1 docker exec -it zerotier zerotier-cli status 1 docker exec -it zerotier zerotier-cli join &amp;lt;your network ID&amp;gt; authorize your NAS</description>
    </item>
    
    <item>
      <title>ZeroTier Moon</title>
      <link>http://staticmanual.github.io/posts/zerotier/zerotier_moon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://staticmanual.github.io/posts/zerotier/zerotier_moon/</guid>
      <description>Prerequisites:
A server with pubilc IP addr
Zerotier installed
Joined your network
Server is authorized
On the Server 1 cd /var/lib/zerotier-one the following commands might require root
1 zerotier-idtool initmoon identity.public &amp;gt; moon.json modify stableEndpoints in moon.json
1 &amp;#34;stableEndpoints&amp;#34;: [&amp;#34;&amp;lt;your server IP&amp;gt;/9993&amp;#34;] 1 zerotier-idtool genmoon moon.json then a file similar to 000000xxxx.moon will be generated
1 mkdir moons.d 1 mv 000000xxxx.moon moons.d 1 sudo systemctl restart zerotier-one run zerotier-cli peers to check whether you server is Moon now</description>
    </item>
    
  </channel>
</rss>
